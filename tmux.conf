
# better terminal colors and fonts
# set -g default-terminal "screen-256color"
set -g default-terminal "tmux-256color"

# remap prefix to Control + a
set -g prefix C-a
bind % split-window -h # Split panes horizontal
bind _ split-window -v # Split panes vertically

# Allow mouse usage in copy mode.
set -g mouse on

# Configure history limit.
set -g history-limit 90000
 
# Monitor activity
set -g visual-activity on

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# move around panes with j and k, a bit like vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
bind H resize-pane -L 
bind -r C-h resize-pane -L
bind J resize-pane -R 
bind -r C-j resize-pane -D
bind K resize-pane -D 
bind -r C-k resize-pane -U
bind L resize-pane -U
bind -r C-l resize-pane -R

# reload tmux.conf
# Prefix + r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

#------------------------------
# tmux plugin manager
#------------------------------
# List of plugins
# Supports `github_username/repo` or full git URLs
set -g @tpm_plugins "              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  tmux-plugins/tmux-yank           \
  tmux-plugins/tmux-copycat     \
  tmux-plugins/tmux-resurrect   \
  tmux-plugins/tmux-continuum   \
"

# tema powerline
set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'powerline/default/gray'
# set -g @themepack 'powerline/double/red'

# integration between tmux and vim, move with control+hjkl
set -g @plugin 'christoomey/vim-tmux-navigator'

# fzf tmux navegation
# set -g @plugin 'sainnhe/tmux-fzf'

run '~/.tmux/plugins/tpm/tpm'

set -g @continuum-restore 'off'

# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell ~/.tmux/plugins/tpm/tpm
#------------------------------

# plugin tmux-yank
# necessário para copiar para o clipboard do sistema
set -g @yank_selection "primary"

#------------------------------
# desabilitar a notificação de atividades automática (irritante)
setw -g monitor-activity off

#------------------------------
# vi mode for copy and paste
set-window-option -g mode-keys vi
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -Tcopy-mode-vi Escape send -X cancel
bind-key -Tcopy-mode-vi V send -X rectangle-toggle

#------------------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l


#------------------------------
# new windows or pane in the current directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

